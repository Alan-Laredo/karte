{"version":3,"sources":["img/logo.png","img/logo1.png","components/Header/Header.js","components/Footer/Copyright.js","components/Footer/Section.js","components/Footer/Footer.js","views/Home.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Header","_ref","handleSubmit","react_default","a","createElement","className","placeholder","onClick","e","Copyright","Section","title","children","items","logo","itemList","Object","objectWithoutProperties","map","item","console","log","href","key","id","name","toUpperCase","src","alt","width","Footer","components_Footer_Section","style","fontSize","Copyright_Copyright","Home","Header_Header","preventDefautl","Footer_Footer","App","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"4EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,2GCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,qMCIzB,SAASC,EAATC,GAAkC,IAAhBC,EAAgBD,EAAhBC,aAC7B,OACIC,EAAAC,EAAAC,cAAA,UAAQC,UAAU,UAGdH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,cAAb,iEACAH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,QACZH,EAAAC,EAAAC,cAAA,SAAOE,YAAY,uCACnBJ,EAAAC,EAAAC,cAAA,UAAQG,QAAS,SAAAC,GAAC,OAAIP,IAAtB,kBCTD,SAASQ,IACpB,OACIP,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,qDCYGM,SAfC,SAAAV,GAAgD,IAA7CW,EAA6CX,EAA7CW,MAAOC,EAAsCZ,EAAtCY,SAAUC,EAA4Bb,EAA5Ba,MAAOC,EAAqBd,EAArBc,KACjCC,GADsDC,OAAAC,EAAA,EAAAD,CAAAhB,EAAA,qCAC3Ca,EACbA,EAAMK,IAAI,SAACC,GAEP,OADAC,QAAQC,IAAIF,GACJjB,EAAAC,EAAAC,cAAA,KAAGkB,KAAMH,EAAKG,KAAMC,IAAKJ,EAAKK,IAAKL,EAAKM,QAEpDL,QAAQC,IAAIR,IAChB,OACIX,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SAASM,EAAQA,EAAMe,cAAiBxB,EAAAC,EAAAC,cAAA,OAAKuB,IAAKb,EAAMc,IAAI,OAAOC,MAAM,WACvF3B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAWO,GAAYG,4BCNnC,SAASe,IAOpB,OACI5B,EAAAC,EAAAC,cAAA,UAAQC,UAAU,UACdH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACXH,EAAAC,EAAAC,cAAC2B,EAAD,CAAS1B,UAAU,oBAAoBS,KAAMA,KACzCZ,EAAAC,EAAAC,cAAA,KAAG4B,MAAO,CAAEC,SAAU,SAAtB,8EAIJ/B,EAAAC,EAAAC,cAAC2B,EAAD,CAAS1B,UAAU,sBAAsBM,MAAM,WAC/CT,EAAAC,EAAAC,cAAC2B,EAAD,CAAS1B,UAAU,oBAAoBM,MAAM,UAAOE,MAflD,CACV,CAAEW,GAAI,EAAGC,KAAM,SAAUH,KAAM,KAC/B,CAAEE,GAAI,EAAGC,KAAM,UAAWH,KAAM,KAChC,CAAEE,GAAI,EAAGC,KAAM,OAAQH,KAAM,KAC7B,CAAEE,GAAI,EAAGC,KAAM,WAAYH,KAAM,SAa7BpB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAAeH,EAAAC,EAAAC,cAAC8B,EAAD,QCrB3B,SAASC,IAMpB,OACIjC,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACgC,EAAD,CAAQnC,aAPK,SAACO,GAClBA,EAAE6B,iBACFjB,QAAQC,IAAI,eAMRnB,EAAAC,EAAAC,cAACkC,EAAD,OCFGC,MARf,WACE,OACErC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAC+B,EAAD,QCMcK,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO5C,EAAAC,EAAAC,cAAC2C,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.fe329fc8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.b82124fe.png\";","module.exports = __webpack_public_path__ + \"static/media/logo1.92a5dd44.png\";","import React from 'react'\r\nimport logo from '../../img/logo1.png'\r\nimport './Header.css'\r\n\r\nexport default function Header({ handleSubmit }) {\r\n    return (\r\n        <header className=\"header\">\r\n            {/* <h1 className=\"logo\"><img src={logo} alt=\"logo\" width=\"300px\" /></h1> */}\r\n            {/* <h3 className=\"intro-title\">Invitaciones y Participaciones de calidad</h3> */}\r\n            <p className=\"intro-text\">Bodas, Bautisos, XV Años, Eventos Sociales y Empresariales</p>\r\n            <form className=\"form\">\r\n                <input placeholder=\"Introduce el tipo de invitación\" />\r\n                <button onClick={e => handleSubmit}>Buscar</button>\r\n            </form>\r\n        </header>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport './Copyright.css'\r\n\r\nexport default function Copyright() {\r\n    return (\r\n        <div className=\"Copyright\">\r\n            <span>Copyright © Karte 2019</span>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport './Section.css'\r\n\r\nconst Section = ({ title, children, items, logo, ...props }) => {\r\n    const itemList = items ?\r\n        items.map((item) => {\r\n            console.log(item);\r\n            return (<a href={item.href} key={item.id}>{item.name}</a>)\r\n        }) :\r\n        console.log(items)\r\n    return (\r\n        <div className=\"Section\">\r\n            <h3 className=\"title\">{title ? title.toUpperCase() : (<img src={logo} alt=\"logo\" width=\"300px\" />)}</h3>\r\n            <div className=\"content\">{children || itemList}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Section","import React from 'react'\r\nimport Copyright from './Copyright';\r\nimport Section from './Section';\r\n\r\nimport logo from '../../img/logo.png'\r\nimport './Footer.css'\r\n\r\nexport default function Footer() {\r\n    const items = [\r\n        { id: 1, name: 'Inicio', href: '#' },\r\n        { id: 2, name: 'Revista', href: '#' },\r\n        { id: 3, name: 'Blog', href: '#' },\r\n        { id: 4, name: 'Contacto', href: '#' },\r\n    ]\r\n    return (\r\n        <footer className=\"Footer\">\r\n            <div className=\"Footer above\">\r\n                <Section className=\"Footer above logo\" logo={logo}>\r\n                    <p style={{ fontSize: '20px' }}>\r\n                        La más fina colección de Participaciones Sociales para tus eventos.\r\n                    </p>\r\n                </Section>\r\n                <Section className=\"Footer above social\" title=\"social\"></Section>\r\n                <Section className=\"Footer above menu\" title=\"menú\" items={items}></Section>\r\n            </div>\r\n            <div className=\"Footer below\"><Copyright></Copyright></div>\r\n        </footer>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport Header from '../components/Header/Header';\r\nimport Footer from '../components/Footer/Footer';\r\n\r\nexport default function Home() {\r\n    const handleSubmit = (e) => {\r\n        e.preventDefautl()\r\n        console.log('submited');\r\n        \r\n    }\r\n    return (\r\n        <div>\r\n            <Header handleSubmit={handleSubmit}></Header>\r\n            <Footer></Footer>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport Home from './views/Home';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Home></Home>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}